<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>frp on sh1marin&#39;s Blog</title>
    <link>https://blog.sh1mar.in/tags/frp/</link>
    <description>Recent content in frp on sh1marin&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://blog.sh1mar.in/tags/frp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用 FRP 实现一机多设备编程</title>
      <link>https://blog.sh1mar.in/post/%E4%BD%BF%E7%94%A8-frp-%E5%AE%9E%E7%8E%B0%E4%B8%80%E6%9C%BA%E5%A4%9A%E8%AE%BE%E5%A4%87%E7%BC%96%E7%A8%8B/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blog.sh1mar.in/post/%E4%BD%BF%E7%94%A8-frp-%E5%AE%9E%E7%8E%B0%E4%B8%80%E6%9C%BA%E5%A4%9A%E8%AE%BE%E5%A4%87%E7%BC%96%E7%A8%8B/</guid>
      <description>前言 最近配了台 ChromeBook 用来方便平常通勤写代码，但是 ChromeBook 羸弱的性能和拉跨的散热使得他日常编程体验极其垃圾。同时，回到宿舍之后用主机写代码和 ChromeBook 之间也会极其脱节。
也有考虑过用 git 分支来管理代码，但是有时候代码写了一半还有很多问题没调试，不想提交 commit 。或者使用 SAMBA 直接对笔记本的代码进行修改，这样又会遇到跨平台编译的问题。
于是我用了一段时间的 VSCode 的 Remote SSH 插件，在外用 ChromeBook，回到宿舍之后主机 SSH 连接 ChromeBook 来写代码。但是这样有些本末倒置了：本来性能更好的主机却只做了显示器的功能。于是我这周和朋友了解了一下 frp 并重新设计了部署方案。
设计 一机多设备编程部署方案：
一台高性能的本地服务器主机用作编译主机，部署 frp 服务到一台有公网 IP 的 VPS主机上，然后别的设备通过 VPS 转发流量到本地主机上来操作本地服务器。
平台 我的本地服务器用的 Ubuntu 20.4，公网服务器用的 Debian Buster。
部署 首先下载 FRP ，根据自己的系统和处理器选择，我这边选的 linux-amd64 版本。解压之后里面有两个程序，一个是 frps ，一个是 frpc ，分别对应服务器和客户端两个程序。
 下面所述的字段在 FRP Docs 里都有详细介绍，你可以根据自己需求更改。
 FRPS（服务器端） 将 frps 和 frps.ini 用 SFTP 发送到公网IP服务器，然后修改 frps.ini ：</description>
    </item>
    
  </channel>
</rss>
