<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>python on sh1marin's Blog</title><link>https://blog.sh1mar.in/tags/python/</link><description>Recent content in python on sh1marin's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>cc-by-sa</copyright><lastBuildDate>Sat, 19 Sep 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.sh1mar.in/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 Python 实现 JSON Web Token</title><link>https://blog.sh1mar.in/post/coding/%E7%94%A8python%E5%AE%9E%E7%8E%B0jwt/</link><pubDate>Sat, 19 Sep 2020 00:00:00 +0000</pubDate><guid>https://blog.sh1mar.in/post/coding/%E7%94%A8python%E5%AE%9E%E7%8E%B0jwt/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>涉及到无状态鉴权时，&lt;code>Token&lt;/code> 是比较好的验证用户身份的方案，而 &lt;code>Token&lt;/code> 如何制作也是一个设计难点。只是一个 &lt;code>Token&lt;/code> 去下载模块又增加依赖的负担，于是我去学习了 &lt;code>JWT(JSON Web Token)&lt;/code> 的设计方式。&lt;/p></description></item></channel></rss>